/**
 * Webhook endpoint –¥–ª—è Telegram –±–æ—Ç–∞ KiraKiraGardenBot
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–ª–∞—Ç–µ–∂–∏ –∏ –¥—Ä—É–≥–∏–µ —Å–æ–±—ã—Ç–∏—è
 *
 * –î–ª—è Vercel: —Ä–∞–∑–º–µ—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ –ø–∞–ø–∫–µ /api/telegram/webhook.js
 * –î–ª—è Express: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–∫ middleware
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const BOT_TOKEN =
  process.env.TELEGRAM_BOT_TOKEN ||
  '8300088116:AAGnsuXBd1eP3vChaxPOIpxCOQxKDANE-zU'
const MINI_APP_URL = process.env.VITE_APP_URL || 'https://your-domain.com'

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 */
async function sendMessage(chatId, text, extraParams = {}) {
  const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`

  const params = {
    chat_id: chatId,
    text: text,
    parse_mode: 'Markdown',
    ...extraParams,
  }

  try {
    const response = await fetch(url, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(params),
    })

    return await response.json()
  } catch (error) {
    console.error('Error sending message:', error)
    return null
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Mini App
 */
function createMiniAppKeyboard() {
  return {
    inline_keyboard: [
      [
        {
          text: 'üå∏ –û—Ç–∫—Ä—ã—Ç—å KiraKira',
          web_app: { url: MINI_APP_URL },
        },
      ],
      [
        {
          text: 'üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏',
          switch_inline_query:
            'üå∏ –ü–æ–ø—Ä–æ–±—É–π KiraKira ‚Äî —Å–æ–∑–¥–∞–π —Å–≤–æ–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–¥!',
        },
      ],
    ],
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
 */
async function handleStartCommand(chatId, userId, firstName, startParam) {
  let welcomeText = `üå∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ KiraKira, ${firstName}!

–¢–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–¥ –∂–¥–µ—Ç —Ç–µ–±—è. –û—Ç–º–µ—á–∞–π —Å–≤–æ–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ –Ω–∞–±–ª—é–¥–∞–π, –∫–∞–∫ –æ–Ω–∏ –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è, –∫—Ä–∏—Å—Ç–∞–ª–ª—ã –∏ –∫–∞–º–Ω–∏.

‚ú® *–ß—Ç–æ —Ç–µ–±—è –∂–¥–µ—Ç:*
‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ç—Ä–µ–∫–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
‚Ä¢ –ö—Ä–∞—Å–∏–≤—ã–µ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–µ–∂–¥—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏  
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–∞–¥–æ–º
‚Ä¢ –ü—Ä–µ–º–∏—É–º —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞ Telegram Stars

–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å —Å–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏? üå±`

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä start (–¥–ª—è deep linking)
  if (startParam) {
    if (startParam.startsWith('premium_')) {
      welcomeText +=
        '\n\n‚≠ê *–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:* –ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ –∂–¥—É—Ç —Ç–µ–±—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏!'
    } else if (startParam === 'shared') {
      welcomeText +=
        '\n\nüéÅ *–¢–µ–±—è –ø—Ä–∏–≥–ª–∞—Å–∏–ª –¥—Ä—É–≥!* –û—Ç–∫—Ä–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–π —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–∞–¥.'
    }
  }

  await sendMessage(chatId, welcomeText, {
    reply_markup: createMiniAppKeyboard(),
  })
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
 */
async function handleCommand(message) {
  const { chat, from, text } = message
  const command = text.split(' ')[0].replace('/', '')
  const startParam = text.split(' ')[1]

  switch (command) {
    case 'start':
      await handleStartCommand(chat.id, from.id, from.first_name, startParam)
      break

    case 'garden':
      await sendMessage(
        chat.id,
        'üå± *–û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–≤–æ–π —Å–∞–¥...*\n\n–ó–∞–ø—É—Å–∫–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ª—é–±—É–π—Å—è —Å–≤–æ–∏–º–∏ —ç–º–æ—Ü–∏—è–º–∏ –≤ –≤–∏–¥–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π!',
        {
          reply_markup: createMiniAppKeyboard(),
        }
      )
      break

    case 'mood':
      await sendMessage(
        chat.id,
        'üòä *–í—Ä–µ–º—è –æ—Ç–º–µ—Ç–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ!*\n\n–û—Ç–∫—Ä–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–æ–¥–µ–ª–∏—Å—å —Ç–µ–º, –∫–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–≥–æ–¥–Ω—è. –ö–∞–∂–¥–∞—è —ç–º–æ—Ü–∏—è —Å—Ç–∞–Ω–µ—Ç —á–∞—Å—Ç—å—é —Ç–≤–æ–µ–≥–æ —Å–∞–¥–∞.',
        {
          reply_markup: createMiniAppKeyboard(),
        }
      )
      break

    case 'stats':
      await sendMessage(
        chat.id,
        'üìä *–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∂–¥–µ—Ç!*\n\n–ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å —Å–≤–æ–µ–≥–æ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è, —Ç—Ä–µ–Ω–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.',
        {
          reply_markup: createMiniAppKeyboard(),
        }
      )
      break

    case 'premium':
      await sendMessage(
        chat.id,
        '‚≠ê *–ü—Ä–µ–º–∏—É–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏*\n\n–†–∞–∑–±–ª–æ–∫–∏—Ä—É–π —Ä–µ–¥–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–∞–¥–∞, —Å–µ–∑–æ–Ω–Ω—ã–µ —Ç–µ–º—ã –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∑–∞ Telegram Stars!',
        {
          reply_markup: createMiniAppKeyboard(),
        }
      )
      break

    case 'share':
      await sendMessage(
        chat.id,
        'üîó *–ü–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–∏–º —Å–∞–¥–æ–º*\n\n–ü–æ–∫–∞–∂–∏ –¥—Ä—É–∑—å—è–º —Å–≤–æ–π –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–¥ –∏ –≤–¥–æ—Ö–Ω–æ–≤–∏ –∏—Ö –Ω–∞ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏!',
        {
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: 'üì± –û—Ç–∫—Ä—ã—Ç—å –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞',
                  web_app: { url: MINI_APP_URL },
                },
              ],
              [
                {
                  text: 'üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π',
                  switch_inline_query:
                    'üå∏ –ü–æ–ø—Ä–æ–±—É–π KiraKira ‚Äî —Å–æ–∑–¥–∞–π —Å–≤–æ–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–¥! https://t.me/KiraKiraGardenBot?startapp',
                },
              ],
            ],
          },
        }
      )
      break

    case 'help':
      await sendMessage(
        chat.id,
        `‚ùì *–°–ø—Ä–∞–≤–∫–∞ –ø–æ KiraKira*

üå∏ */start* - –ù–∞—á–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ
üå± */garden* - –û—Ç–∫—Ä—ã—Ç—å –º–æ–π —Å–∞–¥  
üòä */mood* - –û—Ç–º–µ—Ç–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
üìä */stats* - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
‚≠ê */premium* - –ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏
üîó */share* - –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–∞–¥–æ–º

*–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:*
1. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –æ—Ç–º–µ—á–∞–π —Å–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
2. –ù–∞–±–ª—é–¥–∞–π, –∫–∞–∫ —ç–º–æ—Ü–∏–∏ –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ —Ä–∞—Å—Ç–µ–Ω–∏—è
3. –î–µ–ª–∏—Å—å –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–º–∏ —Å–∞–¥–∞–º–∏ —Å –¥—Ä—É–∑—å—è–º–∏
4. –ò–∑—É—á–∞–π —Å–≤–æ–∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã

–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –ü–∏—à–∏ @support_username`,
        {
          reply_markup: createMiniAppKeyboard(),
        }
      )
      break

    default:
      await sendMessage(
        chat.id,
        'ü§î –ù–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.',
        {
          reply_markup: createMiniAppKeyboard(),
        }
      )
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞—Ç–µ–∂–∞
 */
async function handlePreCheckoutQuery(preCheckoutQuery) {
  const { id, from, currency, total_amount, invoice_payload } = preCheckoutQuery

  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
  console.log(
    `Pre-checkout: User ${from.id} wants to pay ${total_amount} ${currency} for ${invoice_payload}`
  )

  // –û–¥–æ–±—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂
  const url = `https://api.telegram.org/bot${BOT_TOKEN}/answerPreCheckoutQuery`

  await fetch(url, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      pre_checkout_query_id: id,
      ok: true,
    }),
  })
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂
 */
async function handleSuccessfulPayment(message) {
  const { successful_payment, chat, from } = message
  const { currency, total_amount, invoice_payload } = successful_payment

  console.log(
    `Payment successful: User ${from.id} paid ${total_amount} ${currency} for ${invoice_payload}`
  )

  // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–π
  // –ù–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ API call

  await sendMessage(
    chat.id,
    `üéâ *–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!*

–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ç–≤–æ–µ–º —Å–∞–¥—É.

üí´ –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ:
‚Ä¢ –†–µ–¥–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–∞–¥–∞
‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏  
‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ–º—ã
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞

–û—Ç–∫—Ä—ã–≤–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –Ω–æ–≤—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏! üåü`,
    {
      reply_markup: createMiniAppKeyboard(),
    }
  )
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç inline query –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞
 */
async function handleInlineQuery(inlineQuery) {
  const { id, query, from } = inlineQuery

  const results = [
    {
      type: 'article',
      id: '1',
      title: 'üå∏ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ KiraKira',
      description: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º —Å–∞–¥–æ–º —Å –¥—Ä—É–∑—å—è–º–∏',
      input_message_content: {
        message_text: `üå∏ *–ü–æ–ø—Ä–æ–±—É–π KiraKira ‚Äî —Å–æ–∑–¥–∞–π —Å–≤–æ–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–¥!*

–ü—Ä–µ–≤—Ä–∞—â–∞–π —Å–≤–æ–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —ç–º–æ—Ü–∏–∏ –≤ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ —Ü–∏—Ñ—Ä–æ–≤—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è. –ö–∞–∂–¥–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º —Ç–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–∞–¥–∞.

‚ú® –¢–µ–±—è –∂–¥–µ—Ç:
‚Ä¢ –ö—Ä–∞—Å–∏–≤—ã–µ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è –∏ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã
‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ç—Ä–µ–∫–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–µ–∂–¥—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–µ–ª–∏—Ç—å—Å—è —Å–∞–¥–∞–º–∏

–ù–∞—á–Ω–∏ —Å–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! üå±

[–û—Ç–∫—Ä—ã—Ç—å KiraKira](https://t.me/KiraKiraGardenBot?startapp)`,
        parse_mode: 'Markdown',
      },
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: 'üå∏ –ù–∞—á–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ',
              url: 'https://t.me/KiraKiraGardenBot?startapp',
            },
          ],
        ],
      },
    },
  ]

  const url = `https://api.telegram.org/bot${BOT_TOKEN}/answerInlineQuery`

  await fetch(url, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      inline_query_id: id,
      results: results,
      cache_time: 300,
    }),
  })
}

/**
 * –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook'–∞
 */
export default async function handler(req, res) {
  // –¢–æ–ª—å–∫–æ POST –∑–∞–ø—Ä–æ—Å—ã
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' })
  }

  try {
    const update = req.body

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    if (update.message) {
      if (update.message.text && update.message.text.startsWith('/')) {
        await handleCommand(update.message)
      } else if (update.message.successful_payment) {
        await handleSuccessfulPayment(update.message)
      }
    } else if (update.pre_checkout_query) {
      await handlePreCheckoutQuery(update.pre_checkout_query)
    } else if (update.inline_query) {
      await handleInlineQuery(update.inline_query)
    }

    res.status(200).json({ ok: true })
  } catch (error) {
    console.error('Webhook error:', error)
    res.status(500).json({ error: 'Internal server error' })
  }
}

// –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å Express
if (typeof module !== 'undefined' && module.exports) {
  module.exports = handler
}
