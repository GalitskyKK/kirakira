import { useState, useEffect, useCallback } from 'react'
import { useTelegram } from '@/hooks'
import { useUserSync } from '@/hooks/index.v2'
import { useUserClientStore } from '@/hooks/index.v2'
import {
  InitializationState,
  InitializationStage,
  InitializationConfig,
  UseAppInitializationReturn,
} from '@/types/initialization'

const DEFAULT_CONFIG: InitializationConfig = {
  enableTelegram: true,
  enableStoresSync: true,
  timeout: 10000, // 10 —Å–µ–∫—É–Ω–¥
  isDevelopment: import.meta.env.DEV,
}

/**
 * –ì–ª–∞–≤–Ω—ã–π —Ö—É–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç React Query –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export function useAppInitialization(
  config: Partial<InitializationConfig> = {}
): UseAppInitializationReturn {
  const finalConfig = { ...DEFAULT_CONFIG, ...config }

  const [state, setState] = useState<InitializationState>({
    stage: InitializationStage.IDLE,
    isLoading: false,
    error: null,
    progress: 0,
  })

  const { user: telegramUser } = useTelegram()
  const { completeOnboarding } = useUserClientStore()

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º React Query –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { data: userData, isLoading: userLoading } = useUserSync(
    telegramUser?.telegramId,
    !!telegramUser?.telegramId
  )

  const updateProgress = useCallback(
    (stage: InitializationStage, progress: number, error?: string | null) => {
      setState(prev => ({
        ...prev,
        stage,
        progress,
        error: error ?? null,
        isLoading:
          stage !== InitializationStage.COMPLETED &&
          stage !== InitializationStage.FAILED,
      }))
    },
    []
  )

  const logIfDev = useCallback(
    (message: string, data?: unknown) => {
      if (finalConfig.isDevelopment) {
        console.log(message, data || '')
      }
    },
    [finalConfig.isDevelopment]
  )

  const initialize = useCallback(async () => {
    if (state.isLoading) return // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –∑–∞–ø—É—Å–∫–∏

    logIfDev('üöÄ –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è')

    try {
      updateProgress(InitializationStage.TELEGRAM_SETUP, 10)

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
      const isTelegramEnv = !!window.Telegram?.WebApp
      const workingMode: 'telegram' | 'browser' = isTelegramEnv
        ? 'telegram'
        : 'browser'

      if (workingMode === 'telegram') {
        logIfDev('üì± Telegram —Ä–µ–∂–∏–º', {
          telegramId: telegramUser?.telegramId,
        })

        // React Query –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ useUserSync
        // –ü—Ä–æ—Å—Ç–æ –∂–¥–µ–º, –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∑—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ
        if (userLoading) {
          logIfDev('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
        } else if (userData?.user) {
          logIfDev('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã', {
            telegramId: userData.user.telegramId,
          })
          completeOnboarding()
        }
      } else {
        logIfDev('üåê –ë—Ä–∞—É–∑–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º - —Ä–∞–±–æ—Ç–∞ –±–µ–∑ Telegram')
      }

      // –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      updateProgress(InitializationStage.STORES_SYNC, 30)

      // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (userLoading) {
        logIfDev('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
        await new Promise(resolve => {
          const checkUser = () => {
            if (!userLoading) {
              resolve(void 0)
            } else {
              setTimeout(checkUser, 100)
            }
          }
          checkUser()
        })
      }

      updateProgress(InitializationStage.STORES_SYNC, 60)
      logIfDev('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω')

      // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–∞–¥–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
      if (userData?.user) {
        updateProgress(InitializationStage.STORES_SYNC, 80)
        logIfDev('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∞–¥–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω—ã')
      }

      updateProgress(InitializationStage.COMPLETED, 100)
      logIfDev('üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
    } catch (error) {
      const errorMessage =
        error instanceof Error ? error.message : 'Unknown initialization error'
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error)
      updateProgress(InitializationStage.FAILED, 0, errorMessage)
    }
  }, [
    state.isLoading,
    telegramUser,
    userData,
    userLoading,
    completeOnboarding,
    updateProgress,
    logIfDev,
  ])

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    if (state.stage === InitializationStage.IDLE) {
      const timeoutId = setTimeout(() => {
        void initialize()
      }, 100) // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏

      // –¢–∞–π–º–∞—É—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      const safetyTimeoutId = setTimeout(() => {
        if (state.isLoading) {
          logIfDev('‚ö†Ô∏è –¢–∞–π–º–∞—É—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ')
          updateProgress(
            InitializationStage.FAILED,
            0,
            'Initialization timeout'
          )
        }
      }, finalConfig.timeout)

      return () => {
        clearTimeout(timeoutId)
        clearTimeout(safetyTimeoutId)
      }
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é cleanup —Ñ—É–Ω–∫—Ü–∏—é –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
    return () => {}
  }, [
    state.stage,
    state.isLoading,
    initialize,
    updateProgress,
    logIfDev,
    finalConfig.timeout,
  ])

  return {
    stage: state.stage,
    isLoading: state.isLoading,
    error: state.error,
    progress: state.progress,
    initialize,
    isCompleted: state.stage === InitializationStage.COMPLETED,
    isFailed: state.stage === InitializationStage.FAILED,
    canRetry: state.stage === InitializationStage.FAILED,
  }
}
