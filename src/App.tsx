import { useEffect, useState, useRef } from 'react'
import {
  BrowserRouter as Router,
  Routes,
  Route,
  Navigate,
} from 'react-router-dom'
import { motion, AnimatePresence } from 'framer-motion'
import { useUserStore } from '@/stores'
import { initializeStores } from '@/stores'
import { HomePage } from '@/pages/HomePage'
import { OnboardingPage } from '@/pages/OnboardingPage'
import { AuthPage } from '@/pages/AuthPage'
// ShowcasePage –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —É—Å–ª–æ–≤–Ω–æ —Ç–æ–ª—å–∫–æ –≤ DEV —Ä–µ–∂–∏–º–µ
import { LoadingSpinner } from '@/components/ui'
import { lazy, Suspense } from 'react'

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç ShowcasePage —Ç–æ–ª—å–∫–æ –≤ DEV —Ä–µ–∂–∏–º–µ
const ShowcasePage = import.meta.env.DEV
  ? lazy(() => import('@/pages/ShowcasePage'))
  : null
import { TelegramDiagnostic } from '@/components/TelegramDiagnostic'
import { useTelegram, useTelegramTheme } from '@/hooks'
import { telegramStorage } from '@/utils/telegramStorage'

function App() {
  const isDevelopment = import.meta.env.DEV

  if (isDevelopment) {
    console.log('üîç APP.TSX COMPONENT MOUNTING...')
  }

  // üö® –ü–†–û–í–ï–†–ö–ê –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–û–ì–û –†–ï–ñ–ò–ú–ê
  const urlParams = new URLSearchParams(window.location.search)
  const forceDiagnostic =
    urlParams.get('diagnostic') === '1' ||
    urlParams.get('force_diagnostic') === '1'
  const isTelegramEnv = !!window.Telegram?.WebApp

  // ‚úÖ –í–°–ï –•–£–ö–ò –î–û–õ–ñ–ù–´ –ë–´–¢–¨ –í–´–ó–í–ê–ù–´ –î–û –õ–Æ–ë–û–ì–û –£–°–õ–û–í–ù–û–ì–û –í–û–ó–í–†–ê–¢–ê
  const {
    currentUser,
    hasCompletedOnboarding,
    isAuthenticated,
    isLoading,
    loadUser: _loadUser,
    clearAllUserData,
    syncFromSupabase,
    createTelegramUser,
  } = useUserStore()

  const [isInitializing, setIsInitializing] = useState(true)
  const [initError, setInitError] = useState<string | null>(null)
  const [showAuth, setShowAuth] = useState(false)

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º ref –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  const hasInitialized = useRef(false)

  // Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
  const {
    user: telegramUser,
    isTelegramEnv: _isTelegramEnv, // —É–∂–µ –æ–±—ä—è–≤–ª–µ–Ω–æ –≤—ã—à–µ
    isReady: telegramReady,
  } = useTelegram()

  const { colorScheme } = useTelegramTheme()

  // ‚úÖ –í–°–ï –•–£–ö–ò –î–û–õ–ñ–ù–´ –ë–´–¢–¨ –í–´–®–ï –õ–Æ–ë–û–ì–û –£–°–õ–û–í–ù–û–ì–û –í–û–ó–í–†–ê–¢–ê
  // Initialize app
  useEffect(() => {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    if (hasInitialized.current) {
      return
    }

    hasInitialized.current = true

    const initializeApp = async () => {
      // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–∞—á–∞–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏
      const currentTelegramUser = telegramUser
      const currentReady = telegramReady
      const { currentUser: currentStoreUser } = useUserStore.getState()

      if (isDevelopment) {
        console.log('üöÄ –ù–ê–ß–ê–õ–û –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò KiraKira App')
        console.log('üîç TELEGRAM –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:', {
          isTelegramEnv,
          telegramReady: currentReady,
          windowTelegram: !!window.Telegram,
          windowTelegramWebApp: !!window.Telegram?.WebApp,
          userAgent: navigator.userAgent,
          currentUser: currentStoreUser
            ? {
                id: currentStoreUser.id,
                telegramId: currentStoreUser.telegramId,
                isAnonymous: currentStoreUser.isAnonymous,
              }
            : null,
          telegramUser: currentTelegramUser
            ? {
                id: currentTelegramUser.telegramId,
                firstName: currentTelegramUser.firstName,
                username: currentTelegramUser.username ?? undefined,
              }
            : null,
        })
      }

      // üïê –û–ë–™–Ø–í–õ–Ø–ï–ú –¢–ê–ô–ú–ê–£–¢ –í –û–ë–õ–ê–°–¢–ò –í–ò–î–ò–ú–û–°–¢–ò –§–£–ù–ö–¶–ò–ò
      let initTimeout: NodeJS.Timeout | null = null

      try {
        // üïê –ö–†–ò–¢–ò–ß–ù–´–ô –¢–ê–ô–ú–ê–£–¢ –¥–ª—è Telegram - –µ—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –∑–∞ 10 —Å–µ–∫, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
        initTimeout = setTimeout(() => {
          if (isDevelopment) {
            console.warn('‚ö†Ô∏è –¢–ê–ô–ú–ê–£–¢ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò! –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º...')
          }
          setIsInitializing(false)
        }, 10000) // 10 —Å–µ–∫—É–Ω–¥

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
        if (isTelegramEnv) {
          if (isDevelopment) {
            console.log('üì± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram —Ö—Ä–∞–Ω–∏–ª–∏—â–µ...')
          }
          telegramStorage.initialize()

          // üöÄ –£–ü–†–û–©–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê: –ñ–¥–µ–º Telegram –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –º–∞–∫—Å–∏–º—É–º 5 —Å–µ–∫—É–Ω–¥
          if (!telegramReady) {
            if (isDevelopment) {
              console.log('‚è≥ –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Telegram WebApp (–º–∞–∫—Å 5 —Å–µ–∫)...')
            }

            await Promise.race([
              new Promise<void>(resolve => {
                const checkReady = () => {
                  if (telegramReady) {
                    if (isDevelopment) {
                      console.log('‚úÖ Telegram WebApp –≥–æ—Ç–æ–≤!')
                    }
                    resolve()
                  } else {
                    setTimeout(checkReady, 100)
                  }
                }
                checkReady()
              }),
              new Promise<void>(resolve => {
                setTimeout(() => {
                  if (isDevelopment) {
                    console.warn(
                      '‚ö†Ô∏è –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è Telegram WebApp - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ–≥–æ'
                    )
                  }
                  resolve()
                }, 5000) // 5 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
              }),
            ])
          }

          // üîÑ –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –° TELEGRAM
          if (currentTelegramUser && currentReady) {
            if (isDevelopment) {
              console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
                telegramId: currentTelegramUser.telegramId,
                firstName: currentTelegramUser.firstName,
                currentUserTelegramId: currentStoreUser?.telegramId,
              })
            }

            // –ï—Å–ª–∏ —ç—Ç–æ –¥—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ –ø–µ—Ä–≤—ã–π –≤—Ö–æ–¥ - –æ—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            if (
              !currentStoreUser ||
              currentStoreUser.telegramId !== currentTelegramUser.telegramId
            ) {
              try {
                if (isDevelopment) {
                  console.log(
                    'üóëÔ∏è –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π...'
                  )
                }
                await clearAllUserData()

                if (isDevelopment) {
                  console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Supabase...')
                }
                await syncFromSupabase(currentTelegramUser.telegramId)

                // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ - —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const { currentUser: syncedUser } = useUserStore.getState()
                if (!syncedUser) {
                  if (isDevelopment) {
                    console.log('üìù –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
                  }
                  const userToCreate = {
                    telegramId: currentTelegramUser.telegramId,
                    firstName: currentTelegramUser.firstName,
                    lastName: currentTelegramUser.lastName ?? undefined,
                    username: currentTelegramUser.username ?? undefined,
                    photoUrl: currentTelegramUser.photoUrl ?? undefined,
                    authDate: new Date(),
                    hash: 'telegram_miniapp',
                  }
                  // createTelegramUser –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç User, –Ω–µ Promise
                  createTelegramUser(userToCreate)
                }

                if (isDevelopment) {
                  console.log('‚úÖ Telegram —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
                }
              } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Telegram:', error)
                setInitError(
                  `Telegram sync failed: ${error instanceof Error ? error.message : 'Unknown error'}`
                )
              }
            } else {
              if (isDevelopment) {
                console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω')
              }

              // üîÑ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
              try {
                if (isDevelopment) {
                  console.log(
                    'üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞...'
                  )
                }
                await syncFromSupabase(currentTelegramUser.telegramId)
                if (isDevelopment) {
                  console.log('‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
                }
              } catch (syncError) {
                if (isDevelopment) {
                  console.warn(
                    '‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:',
                    syncError
                  )
                }
              }
            }
          }
        }

        await initializeStores()

        // üîÑ –û–î–ù–û–†–ê–ó–û–í–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –î–ê–ù–ù–´–• –¥–ª—è Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if (currentTelegramUser && currentReady) {
          try {
            if (isDevelopment) {
              console.log(
                'üîÑ –û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è stores —Å —Å–µ—Ä–≤–µ—Ä–æ–º –ø—Ä–∏ –≤—Ö–æ–¥–µ...'
              )
            }

            // –ü–æ–ª—É—á–∞–µ–º stores –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –û–î–ò–ù –†–ê–ó
            const { useMoodStore } = await import('@/stores/moodStore')
            const { useGardenStore } = await import('@/stores/gardenStore')

            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ (–æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –≤—Ö–æ–¥–µ)
            await useMoodStore.getState().syncMoodHistory(true) // forceSync = true
            await useGardenStore.getState().syncGarden(true) // forceSync = true

            if (isDevelopment) {
              console.log('‚úÖ Stores —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º')
            }
          } catch (storesSyncError) {
            if (isDevelopment) {
              console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ stores:', storesSyncError)
            }
          }
        }

        // updateLastVisit() –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –≤ loadUser() –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        // üèÅ –û–ß–ò–©–ê–ï–ú –¢–ê–ô–ú–ê–£–¢ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        if (initTimeout !== null) clearTimeout(initTimeout)
        if (isDevelopment) {
          console.log('‚úÖ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!')
        }
      } catch (error) {
        // üèÅ –û–ß–ò–©–ê–ï–ú –¢–ê–ô–ú–ê–£–¢ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        if (initTimeout) clearTimeout(initTimeout)
        console.error('‚ùå –û–®–ò–ë–ö–ê –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò:', error)
        if (isDevelopment) {
          console.error(
            '‚ùå Stack trace:',
            error instanceof Error ? error.stack : 'No stack'
          )
        }
        setInitError(
          error instanceof Error ? error.message : 'Initialization failed'
        )
      } finally {
        if (isDevelopment) {
          console.log('üèÅ –§–ò–ù–ê–õ–ò–ó–ê–¶–ò–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò (setIsInitializing(false))')
        }
        setIsInitializing(false)
      }
    }

    void initializeApp()
  }, []) // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑

  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É Telegram –∫ –∫–æ—Ä–Ω–µ–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
  useEffect(() => {
    if (isTelegramEnv) {
      document.documentElement.classList.toggle('dark', colorScheme === 'dark')
    }
  }, [isTelegramEnv, colorScheme])

  // ‚úÖ –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ü–û–°–õ–ï –í–°–ï–• –•–£–ö–û–í
  if (isDevelopment) {
    console.log('üîç USER STORE LOADED:', {
      currentUser: !!currentUser,
      hasCompletedOnboarding,
      isAuthenticated,
      isLoading,
    })

    console.log('üîç TELEGRAM HOOKS LOADED:', {
      telegramUser: !!telegramUser,
      isTelegramEnv,
      telegramReady,
    })

    console.log('üîç TELEGRAM THEME LOADED:', { colorScheme })
  }

  // üö® –ü–û–ö–ê–ó–ê–¢–¨ –î–ò–ê–ì–ù–û–°–¢–ò–ö–£ –ü–†–ò –ü–†–û–ë–õ–ï–ú–ê–• –í TELEGRAM (–ø–æ—Å–ª–µ –≤—Å–µ—Ö —Ö—É–∫–æ–≤)
  if (forceDiagnostic || (isTelegramEnv && urlParams.get('debug') === '1')) {
    if (isDevelopment) {
      console.log('üö® –ü–û–ö–ê–ó–´–í–ê–ï–ú –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–£–Æ –°–¢–†–ê–ù–ò–¶–£')
    }
    return <TelegramDiagnostic />
  }

  // Handle onboarding completion
  const handleOnboardingComplete = () => {
    // Reload to ensure fresh state
    window.location.reload()
  }

  // Show loading state during initialization
  if (isInitializing || isLoading) {
    const isDevelopment = import.meta.env.DEV

    // üîç –û–¢–õ–ê–î–ö–ê –≠–ö–†–ê–ù–ê –ó–ê–ì–†–£–ó–ö–ò (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ)
    if (isDevelopment) {
      console.log('üîç –†–ï–ù–î–ï–†–ò–ú –≠–ö–†–ê–ù –ó–ê–ì–†–£–ó–ö–ò:', {
        isInitializing,
        isLoading,
        isTelegramEnv,
        telegramReady,
        telegramUser: !!telegramUser,
        currentUser: !!currentUser,
        hasCompletedOnboarding,
        isAuthenticated,
        initError,
      })
    }

    const bgClass = isTelegramEnv
      ? 'bg-[var(--tg-bg-color,#ffffff)]'
      : 'bg-gradient-to-br from-garden-50 to-green-50'

    return (
      <div
        className={`flex min-h-screen items-center justify-center ${bgClass}`}
      >
        <motion.div
          className="text-center"
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 0.5 }}
        >
          <div className="mb-4 text-6xl">üå∏</div>
          <h1 className="mb-4 text-2xl font-bold text-[var(--tg-text-color,#000000)]">
            KiraKira
          </h1>
          <LoadingSpinner size="lg" />
          <p className="mt-4 text-[var(--tg-hint-color,#666666)]">
            {isTelegramEnv
              ? 'üå± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–¥...'
              : '–ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—à —Å–∞–¥...'}
          </p>

          {/* –î—Ä—É–∂–µ–ª—é–±–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ */}
          {isTelegramEnv && telegramUser && !isDevelopment && (
            <div className="mt-4 rounded-lg bg-blue-100/50 p-3">
              <p className="text-sm text-[var(--tg-hint-color,#666666)]">
                üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {telegramUser.firstName}!
              </p>
              <p className="mt-1 text-xs text-[var(--tg-hint-color,#666666)]">
                üîÑ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–¥
              </p>
            </div>
          )}

          {/* üîç –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê - —Ç–æ–ª—å–∫–æ –≤ development —Ä–µ–∂–∏–º–µ */}
          {isDevelopment && isTelegramEnv && (
            <div className="mt-4 space-y-2 rounded-lg bg-yellow-100/50 p-3 text-xs">
              <div className="font-semibold">
                üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Telegram (Dev Mode):
              </div>

              <div className="grid grid-cols-2 gap-2">
                <div>
                  Init: {isInitializing ? '‚è≥ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è' : '‚úÖ –ì–æ—Ç–æ–≤'}
                </div>
                <div>Loading: {isLoading ? '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞' : '‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω'}</div>
              </div>

              <div className="grid grid-cols-2 gap-2">
                <div>
                  TG Ready: {telegramReady ? '‚úÖ –ì–æ—Ç–æ–≤' : '‚ùå –ù–ï –≥–æ—Ç–æ–≤'}
                </div>
                <div>User: {telegramUser ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –ù–ï–¢'}</div>
              </div>

              <div className="grid grid-cols-2 gap-2">
                <div>
                  Auth:{' '}
                  {isAuthenticated ? '‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' : '‚ùå –ù–ï –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'}
                </div>
                <div>
                  TG API: {window.Telegram?.WebApp ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –ù–ï–¢'}
                </div>
              </div>

              {telegramUser && (
                <div className="text-blue-600">
                  üë§ @{telegramUser.username ?? telegramUser.firstName} (ID:{' '}
                  {telegramUser.telegramId})
                </div>
              )}

              {initError && initError.trim() !== '' && (
                <div className="font-semibold text-red-600">
                  ‚ùå –û—à–∏–±–∫–∞: {initError}
                </div>
              )}

              <div className="text-xs text-gray-500">
                üí° Development Mode - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
              </div>

              {/* üö® –ê–í–ê–†–ò–ô–ù–ê–Ø –ö–ù–û–ü–ö–ê —Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ */}
              <div className="mt-2">
                <button
                  onClick={() => {
                    console.warn('üö® –ê–í–ê–†–ò–ô–ù–´–ô –í–´–•–û–î –ò–ó –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò!')
                    setIsInitializing(false)
                    setInitError(null)
                  }}
                  className="w-full rounded bg-red-500/70 px-3 py-2 text-xs text-white hover:bg-red-600/70"
                >
                  üö® –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é (dev only)
                </button>
              </div>
            </div>
          )}

          {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ dev —Ä–µ–∂–∏–º–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
          {isDevelopment && isTelegramEnv && telegramUser && (
            <div className="mt-4 rounded-lg bg-green-100/50 p-3">
              <p className="text-sm text-[var(--tg-hint-color,#666666)]">
                üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {telegramUser.firstName}!
              </p>
              <p className="mt-1 text-xs text-[var(--tg-hint-color,#666666)]">
                üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram
              </p>
            </div>
          )}
        </motion.div>
      </div>
    )
  }

  if (isDevelopment) {
    console.log('üîç –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê –†–ï–ù–î–ï–†–ò–ù–ì–ê:', {
      initError: initError ? initError.trim() !== '' : false,
      hasCompletedOnboarding,
      isAuthenticated,
      isTelegramEnv,
    })
  }

  // Show error state if initialization failed
  if (initError && initError.trim() !== '') {
    if (isDevelopment) {
      console.log('üîç –†–ï–ù–î–ï–†–ò–ú ERROR STATE')
    }
    return (
      <div className="flex min-h-screen items-center justify-center bg-gradient-to-br from-red-50 to-orange-50">
        <motion.div
          className="mx-auto max-w-md p-8 text-center"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
        >
          <div className="mb-4 text-6xl">‚ö†Ô∏è</div>
          <h1 className="mb-4 text-2xl font-bold text-gray-900">
            –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
          </h1>
          <p className="mb-6 text-gray-600">{initError}</p>
          <button
            onClick={() => window.location.reload()}
            className="rounded-lg bg-red-500 px-6 py-3 text-white transition-colors hover:bg-red-600"
          >
            –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
          </button>
        </motion.div>
      </div>
    )
  }

  // Show onboarding for new users
  if (!hasCompletedOnboarding) {
    if (isDevelopment) {
      console.log('üîç –†–ï–ù–î–ï–†–ò–ú ONBOARDING PAGE')
    }
    return <OnboardingPage onComplete={handleOnboardingComplete} />
  }

  // Show auth screen for non-authenticated users (optional)
  if (showAuth && !isAuthenticated && !isTelegramEnv) {
    if (isDevelopment) {
      console.log('üîç –†–ï–ù–î–ï–†–ò–ú AUTH PAGE')
    }
    return (
      <AuthPage
        onSuccess={() => setShowAuth(false)}
        onError={error => console.error('Auth error:', error)}
      />
    )
  }

  if (isDevelopment) {
    console.log('üîç –†–ï–ù–î–ï–†–ò–ú –û–°–ù–û–í–ù–û–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–ï (ROUTER)')
  }

  // Main app routing
  return (
    <Router>
      <div className="App">
        <AnimatePresence mode="wait">
          <Routes>
            <Route
              path="/"
              element={
                <motion.div
                  key="home"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  exit={{ opacity: 0 }}
                  transition={{ duration: 0.3 }}
                >
                  <HomePage />
                </motion.div>
              }
            />
            {/* Showcase —Ä–æ—É—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –≤ DEV —Ä–µ–∂–∏–º–µ */}
            {import.meta.env.DEV && ShowcasePage && (
              <Route
                path="/showcase"
                element={
                  <motion.div
                    key="showcase"
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    exit={{ opacity: 0 }}
                    transition={{ duration: 0.3 }}
                  >
                    <Suspense fallback={<LoadingSpinner />}>
                      <ShowcasePage />
                    </Suspense>
                  </motion.div>
                }
              />
            )}
            <Route
              path="/auth"
              element={
                <motion.div
                  key="auth"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  exit={{ opacity: 0 }}
                  transition={{ duration: 0.3 }}
                >
                  <AuthPage
                    onSuccess={() => window.location.replace('/')}
                    onError={error => console.error('Auth error:', error)}
                  />
                </motion.div>
              }
            />
            <Route path="*" element={<Navigate to="/" replace />} />
          </Routes>
        </AnimatePresence>
      </div>
    </Router>
  )
}

export default App
