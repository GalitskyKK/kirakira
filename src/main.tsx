import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App'
import { ErrorBoundary } from './components/ErrorBoundary'
import './styles/index.css'

// üîç –ö–†–ò–¢–ò–ß–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–†–ï–î–´ –í–´–ü–û–õ–ù–ï–ù–ò–Ø (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ)
if (import.meta.env.DEV) {
  console.log('üîç MAIN.TSX LOADING:', {
    isTelegramEnv: !!window.Telegram?.WebApp,
    windowTelegram: !!window.Telegram,
    windowTelegramWebApp: !!window.Telegram?.WebApp,
    documentReady: document.readyState,
    userAgent: navigator.userAgent,
    viewport: {
      width: window.innerWidth,
      height: window.innerHeight,
      devicePixelRatio: window.devicePixelRatio,
    },
    timestamp: new Date().toISOString(),
  })
}

// PWA registration —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ virtual:pwa-register –≤ UpdatePrompt –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ

// Get root element
const rootElement = document.getElementById('root')

if (!rootElement) {
  throw new Error('Failed to find the root element')
}

if (import.meta.env.DEV) {
  console.log('üîç ROOT ELEMENT FOUND, CREATING REACT ROOT...')
}

// Create root and render app
const root = ReactDOM.createRoot(rootElement)

if (import.meta.env.DEV) {
  console.log('üîç RENDERING APP WITH ERROR BOUNDARY...')
}

root.render(
  <React.StrictMode>
    <ErrorBoundary>
      <App />
    </ErrorBoundary>
  </React.StrictMode>
)

if (import.meta.env.DEV) {
  console.log('üîç MAIN.TSX RENDER COMPLETE')
}
