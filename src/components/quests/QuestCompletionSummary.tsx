/**
 * üéØ QUEST COMPLETION SUMMARY COMPONENT
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–≤–æ–¥–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π
 */

import { motion } from 'framer-motion'
import { Card } from '@/components/ui/Card'
import { Button } from '@/components/ui/Button'
import { useClaimAllRewards } from '@/hooks/queries/useDailyQuestQueries'
import { useDailyQuestStore } from '@/stores/dailyQuestStore'
import { calculateBonusRewards, formatQuestRewards } from '@/types/dailyQuests'
import type { DailyQuest } from '@/types/dailyQuests'

interface QuestCompletionSummaryProps {
  readonly completedCount: number
  readonly totalCount: number
  readonly percentage: number
  readonly quests: readonly DailyQuest[]
  readonly telegramId: number
  readonly className?: string
}

export function QuestCompletionSummary({
  completedCount,
  totalCount,
  percentage,
  quests,
  telegramId,
  className = '',
}: QuestCompletionSummaryProps) {
  // –í—ã—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã
  const bonusRewards = calculateBonusRewards(completedCount, totalCount)

  // –•—É–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –Ω–∞–≥—Ä–∞–¥
  const claimAllMutation = useClaimAllRewards()
  const { showRewardAnimation } = useDailyQuestStore()

  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–≤–µ—Å—Ç—ã –ø–æ —Å—Ç–∞—Ç—É—Å—É
  const questsByStatus = quests.reduce(
    (acc, quest) => {
      if (!acc[quest.status]) {
        acc[quest.status] = []
      }
      const existing = acc[quest.status]
      if (existing) {
        acc[quest.status] = [...existing, quest]
      } else {
        acc[quest.status] = [quest]
      }
      return acc
    },
    {} as Record<string, DailyQuest[]>
  )

  const expiredQuests = questsByStatus['expired'] ?? []
  const unclaimedQuests = questsByStatus['completed'] ?? []

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –Ω–∞–≥—Ä–∞–¥
  const handleClaimAllRewards = async () => {
    if (unclaimedQuests.length === 0) return

    try {
      const questIds = unclaimedQuests.map(quest => quest.id)
      const results = await claimAllMutation.mutateAsync({
        telegramId,
        questIds,
      })

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å —Å—É–º–º–∞—Ä–Ω—ã–º–∏ –Ω–∞–≥—Ä–∞–¥–∞–º–∏
      if (results.length > 0) {
        const totalRewards = results.reduce(
          (total, result) => ({
            sprouts: total.sprouts + result.rewards.sprouts,
            gems: total.gems + (result.rewards.gems || 0),
            experience: total.experience + result.rewards.experience,
          }),
          { sprouts: 0, gems: 0, experience: 0 }
        )

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –Ω–∞–≥—Ä–∞–¥—ã
        showRewardAnimation({
          ...totalRewards,
          description: `–ü–æ–ª—É—á–µ–Ω—ã –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ ${results.length} –∑–∞–¥–∞–Ω–∏–π!`,
        })
      }
    } catch (error) {
      console.error('Claim all rewards error:', error)
    }
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  const getProgressColor = () => {
    if (percentage >= 100) return 'text-green-600'
    if (percentage >= 80) return 'text-blue-600'
    if (percentage >= 60) return 'text-yellow-600'
    return 'text-red-600'
  }

  const getProgressBarColor = () => {
    if (percentage >= 100) return 'bg-green-500'
    if (percentage >= 80) return 'bg-blue-500'
    if (percentage >= 60) return 'bg-yellow-500'
    return 'bg-red-500'
  }

  return (
    <Card className={`p-4 dark:bg-gray-800 ${className}`}>
      <div className="space-y-4">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="text-center">
          <div className={`text-3xl font-bold ${getProgressColor()}`}>
            {completedCount} / {totalCount}
          </div>
          <div className="mb-2 text-sm text-gray-600 dark:text-gray-400">
            –∑–∞–¥–∞–Ω–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
          </div>

          {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
          <div className="mb-2 h-3 w-full rounded-full bg-gray-200 dark:bg-gray-700">
            <motion.div
              className={`h-3 rounded-full ${getProgressBarColor()}`}
              initial={{ width: 0 }}
              animate={{ width: `${percentage}%` }}
              transition={{ duration: 0.8, ease: 'easeOut' }}
            />
          </div>

          <div className={`text-sm font-medium ${getProgressColor()}`}>
            {percentage}% –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
          </div>
        </div>

        {/* –ë–æ–Ω—É—Å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã */}
        {bonusRewards && (
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.3 }}
            className="rounded-lg border border-purple-200 bg-gradient-to-r from-purple-50 to-pink-50 p-3 dark:border-purple-700 dark:from-purple-900/30 dark:to-pink-900/30"
          >
            <div className="text-center">
              <div className="mb-1 text-2xl">üéÅ</div>
              <div className="mb-1 text-sm font-semibold text-purple-700 dark:text-purple-300">
                –ë–æ–Ω—É—Å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞!
              </div>
              <div className="text-xs text-purple-600 dark:text-purple-400">
                {formatQuestRewards(bonusRewards)}
              </div>
            </div>
          </motion.div>
        )}

        {/* –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-2 gap-4 text-sm">
          <div className="text-center">
            <div className="text-lg font-semibold text-green-600">
              {completedCount}
            </div>
            <div className="text-gray-600">–í—ã–ø–æ–ª–Ω–µ–Ω–æ</div>
          </div>

          <div className="text-center">
            <div className="text-lg font-semibold text-blue-600">
              {unclaimedQuests.length}
            </div>
            <div className="text-gray-600">–ì–æ—Ç–æ–≤–æ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é</div>
          </div>
        </div>

        {/* –ò—Å—Ç–µ–∫—à–∏–µ –∑–∞–¥–∞–Ω–∏—è */}
        {expiredQuests.length > 0 && (
          <motion.div
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.3 }}
            className="rounded-lg border border-red-200 bg-red-50 p-3"
          >
            <div className="text-center">
              <div className="mb-1 text-sm font-semibold text-red-700">
                –ù–µ —É—Å–ø–µ–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å ({expiredQuests.length})
              </div>
              <div className="text-xs text-red-600">
                {expiredQuests
                  .map(quest => quest.metadata?.name || '–ó–∞–¥–∞–Ω–∏–µ')
                  .join(', ')}
              </div>
            </div>
          </motion.div>
        )}

        {/* –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è */}
        <div className="text-center">
          {percentage >= 100 ? (
            <motion.div
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.3 }}
              className="font-semibold text-green-600"
            >
              üéâ –ò–¥–µ–∞–ª—å–Ω—ã–π –¥–µ–Ω—å! –í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!
            </motion.div>
          ) : percentage >= 80 ? (
            <div className="font-medium text-blue-600">
              üî• –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ü–æ—á—Ç–∏ –≤—Å–µ –≥–æ—Ç–æ–≤–æ!
            </div>
          ) : percentage >= 60 ? (
            <div className="font-medium text-yellow-600">
              üí™ –•–æ—Ä–æ—à–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!
            </div>
          ) : percentage >= 40 ? (
            <div className="font-medium text-orange-600">
              üå± –ù–µ–ø–ª–æ—Ö–æ! –ï—â–µ –Ω–µ–º–Ω–æ–≥–æ —É—Å–∏–ª–∏–π!
            </div>
          ) : (
            <div className="font-medium text-red-600">
              üöÄ –í—Ä–µ–º—è –Ω–∞—á–∞—Ç—å! –£ –≤–∞—Å –µ—Å—Ç—å –≤—Å–µ —à–∞–Ω—Å—ã!
            </div>
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π */}
        {unclaimedQuests.length > 0 && (
          <div className="text-center">
            <Button
              size="sm"
              className="bg-green-500 hover:bg-green-600"
              onClick={handleClaimAllRewards}
              disabled={claimAllMutation.isPending}
            >
              {claimAllMutation.isPending
                ? '–ü–æ–ª—É—á–µ–Ω–∏–µ...'
                : `–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –Ω–∞–≥—Ä–∞–¥—ã (${unclaimedQuests.length})`}
            </Button>
          </div>
        )}
      </div>
    </Card>
  )
}
