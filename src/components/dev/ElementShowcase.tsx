import { motion } from 'framer-motion'
import {
  FlowerSVG,
  TreeSVG,
  CrystalSVG,
  MushroomSVG,
  StoneSVG,
  RainbowFlowerSVG,
  GlowingCrystalSVG,
  MysticMushroomSVG,
} from '../garden/plants'
import { ElementType, RarityLevel } from '@/types'
import { Card } from '@/components/ui/Card'
import {
  ELEMENT_TEMPLATES,
  PREMIUM_ELEMENT_TYPES,
} from '@/utils/elementGeneration'

// –ú–∞–ø–ø–∏–Ω–≥ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º
const getElementComponent = (elementType: ElementType) => {
  switch (elementType) {
    case ElementType.FLOWER:
      return FlowerSVG
    case ElementType.RAINBOW_FLOWER:
      return RainbowFlowerSVG
    case ElementType.TREE:
      return TreeSVG
    case ElementType.AURORA_TREE:
      return TreeSVG // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω–æ–µ –¥–µ—Ä–µ–≤–æ —Å –æ—Å–æ–±—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
    case ElementType.CRYSTAL:
      return CrystalSVG
    case ElementType.GLOWING_CRYSTAL:
      return GlowingCrystalSVG
    case ElementType.MUSHROOM:
      return MushroomSVG
    case ElementType.MYSTIC_MUSHROOM:
      return MysticMushroomSVG
    case ElementType.STONE:
      return StoneSVG
    case ElementType.GRASS:
      return FlowerSVG // –ó–∞–≥–ª—É—à–∫–∞
    case ElementType.WATER:
      return CrystalSVG // –ó–∞–≥–ª—É—à–∫–∞ (–ø–æ—Ö–æ–∂ –Ω–∞ –∫–∞–ø–ª—é)
    case ElementType.DECORATION:
      return FlowerSVG // –ó–∞–≥–ª—É—à–∫–∞
    case ElementType.STARLIGHT_DECORATION:
      return CrystalSVG // –ó–∞–≥–ª—É—à–∫–∞ (—Å–≤–µ—Ç—è—â–∏–π—Å—è)
    default:
      return FlowerSVG
  }
}

// –ú–∞–ø–ø–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º
const MOOD_MAPPING: Record<ElementType, string[]> = {
  [ElementType.FLOWER]: ['–†–∞–¥–æ—Å—Ç—å'],
  [ElementType.TREE]: ['–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ'],
  [ElementType.CRYSTAL]: ['–°—Ç—Ä–µ—Å—Å', '–ì–Ω–µ–≤'],
  [ElementType.MUSHROOM]: ['–ì—Ä—É—Å—Ç—å', '–¢—Ä–µ–≤–æ–≥–∞'],
  [ElementType.STONE]: ['–°—Ç—Ä–µ—Å—Å', '–ì–Ω–µ–≤'],
  [ElementType.GRASS]: ['–ì—Ä—É—Å—Ç—å'],
  [ElementType.WATER]: ['–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ'],
  [ElementType.DECORATION]: ['–†–∞–¥–æ—Å—Ç—å', '–¢—Ä–µ–≤–æ–≥–∞'],
  [ElementType.RAINBOW_FLOWER]: ['–†–∞–¥–æ—Å—Ç—å'],
  [ElementType.GLOWING_CRYSTAL]: ['–°—Ç—Ä–µ—Å—Å', '–ì–Ω–µ–≤'],
  [ElementType.MYSTIC_MUSHROOM]: ['–ì—Ä—É—Å—Ç—å', '–¢—Ä–µ–≤–æ–≥–∞'],
  [ElementType.AURORA_TREE]: ['–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ'],
  [ElementType.STARLIGHT_DECORATION]: ['–†–∞–¥–æ—Å—Ç—å', '–¢—Ä–µ–≤–æ–≥–∞'],
}

// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º ELEMENT_TEMPLATES –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è showcase
const ALL_ELEMENTS = ELEMENT_TEMPLATES.map(template => ({
  ...template,
  component: getElementComponent(template.type),
  isPremium: PREMIUM_ELEMENT_TYPES.has(template.type),
  moods: MOOD_MAPPING[template.type] || ['–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π'],
}))

const RARITY_INFO = {
  [RarityLevel.COMMON]: { color: '#6b7280', label: '–û–±—ã—á–Ω—ã–π', chance: '50%' },
  [RarityLevel.UNCOMMON]: {
    color: '#22c55e',
    label: '–ù–µ–æ–±—ã—á–Ω—ã–π',
    chance: '30%',
  },
  [RarityLevel.RARE]: { color: '#3b82f6', label: '–†–µ–¥–∫–∏–π', chance: '15%' },
  [RarityLevel.EPIC]: { color: '#a855f7', label: '–≠–ø–∏—á–µ—Å–∫–∏–π', chance: '4%' },
  [RarityLevel.LEGENDARY]: {
    color: '#f59e0b',
    label: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π',
    chance: '1%',
  },
}

export function ElementShowcase() {
  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-blue-50 p-4">
      <div className="mx-auto max-w-6xl">
        <div className="mb-8 text-center">
          <h1 className="mb-4 text-4xl font-bold text-gray-800">
            üåø –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–∞–¥–∞ KiraKira
          </h1>
          <p className="text-lg text-gray-600">
            –ü–æ–ª–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è –∏–∑ {ALL_ELEMENTS.length} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å
            —Å–∏—Å—Ç–µ–º–æ–π —Ä–µ–¥–∫–æ—Å—Ç–∏
          </p>
          <div className="mt-4 flex flex-wrap justify-center gap-2">
            <span className="rounded-full bg-blue-100 px-3 py-1 text-sm text-blue-700">
              {ALL_ELEMENTS.filter(el => !el.isPremium).length} –±–∞–∑–æ–≤—ã—Ö
              —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            </span>
            <span className="rounded-full bg-yellow-100 px-3 py-1 text-sm text-yellow-700">
              {ALL_ELEMENTS.filter(el => el.isPremium).length} –ø—Ä–µ–º–∏—É–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            </span>
          </div>
        </div>

        {/* –°–∏—Å—Ç–µ–º–∞ —Ä–µ–¥–∫–æ—Å—Ç–∏ */}
        <Card className="mb-8 p-6">
          <h2 className="mb-4 text-2xl font-semibold">üé≤ –°–∏—Å—Ç–µ–º–∞ —Ä–µ–¥–∫–æ—Å—Ç–∏</h2>
          <div className="grid grid-cols-2 gap-4 md:grid-cols-5">
            {Object.entries(RARITY_INFO).map(([rarity, info]) => (
              <div
                key={rarity}
                className="rounded-lg border-2 p-3 text-center"
                style={{ borderColor: info.color }}
              >
                <div
                  className="mx-auto mb-2 h-4 w-4 rounded-full"
                  style={{ backgroundColor: info.color }}
                />
                <div className="font-medium" style={{ color: info.color }}>
                  {info.label}
                </div>
                <div className="text-sm text-gray-500">{info.chance}</div>
              </div>
            ))}
          </div>
        </Card>

        {/* –≠–ª–µ–º–µ–Ω—Ç—ã –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏ */}
        {Object.entries(RARITY_INFO).map(([rarity, rarityInfo]) => {
          const elementsOfRarity = ALL_ELEMENTS.filter(
            el => el.rarity === rarity
          )
          if (elementsOfRarity.length === 0) return null

          return (
            <Card key={rarity} className="mb-8 p-6">
              <h2 className="mb-4 flex items-center gap-2 text-2xl font-semibold">
                <div
                  className="h-4 w-4 rounded-full"
                  style={{ backgroundColor: rarityInfo.color }}
                />
                {rarityInfo.label} —ç–ª–µ–º–µ–Ω—Ç—ã
                <span className="ml-auto text-sm text-gray-500">
                  {elementsOfRarity.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ ‚Ä¢ {rarityInfo.chance} —à–∞–Ω—Å
                </span>
              </h2>
              <div className="grid grid-cols-2 gap-6 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5">
                {elementsOfRarity.map((element, index) => {
                  const Component = element.component

                  return (
                    <motion.div
                      key={`${element.type}-${element.name}`}
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.05 }}
                      className={`group relative rounded-lg border-2 p-4 text-center transition-all hover:shadow-lg ${
                        element.isPremium
                          ? 'border-yellow-300 bg-gradient-to-br from-yellow-50 to-orange-50 hover:border-yellow-400'
                          : 'border-gray-200 bg-white hover:border-gray-300'
                      }`}
                    >
                      {element.isPremium && (
                        <div className="absolute -right-2 -top-2 rounded-full bg-yellow-500 px-2 py-1 text-xs font-bold text-white">
                          PREMIUM
                        </div>
                      )}
                      <div className="mb-3 flex justify-center">
                        <Component
                          size={element.isPremium ? 90 : 80}
                          color={element.baseColor}
                        />
                      </div>
                      <h3 className="mb-1 font-medium text-gray-800">
                        {element.name}
                      </h3>
                      <p className="mb-2 text-xs text-gray-600">
                        {element.description}
                      </p>
                      <div
                        className="mb-2 inline-flex items-center rounded-full px-2 py-1 text-xs font-medium text-white"
                        style={{ backgroundColor: rarityInfo.color }}
                      >
                        {element.isPremium ? '‚≠ê ' : ''}
                        {rarityInfo.label}
                      </div>
                      <div className="mb-1 text-xs text-gray-500">
                        üé≠ {element.moods.join(', ')}
                      </div>
                      <div className="text-xs text-gray-400">
                        {element.emoji}
                      </div>
                      {element.isPremium && (
                        <div className="mt-2 text-xs text-yellow-600">
                          –¢–æ–ª—å–∫–æ –¥–ª—è Premium
                        </div>
                      )}
                    </motion.div>
                  )
                })}
              </div>
            </Card>
          )
        })}

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ */}
        <Card className="p-6">
          <h2 className="mb-4 text-2xl font-semibold">
            üìã –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã
          </h2>
          <div className="grid gap-4 md:grid-cols-3">
            <div className="rounded-lg bg-blue-50 p-4">
              <h3 className="mb-2 font-semibold text-blue-800">
                üéØ –í–ª–∏—è–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
              </h3>
              <ul className="space-y-1 text-sm text-blue-700">
                <li>
                  üòä <strong>–†–∞–¥–æ—Å—Ç—å</strong> ‚Üí –¶–≤–µ—Ç—ã –∏ —É–∫—Ä–∞—à–µ–Ω–∏—è
                </li>
                <li>
                  üòå <strong>–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ</strong> ‚Üí –î–µ—Ä–µ–≤—å—è –∏ –≤–æ–¥–∞
                </li>
                <li>
                  üò∞ <strong>–°—Ç—Ä–µ—Å—Å</strong> ‚Üí –ö–∞–º–Ω–∏ –∏ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã
                </li>
                <li>
                  üò¢ <strong>–ì—Ä—É—Å—Ç—å</strong> ‚Üí –ì—Ä–∏–±—ã –∏ —Ç—Ä–∞–≤–∞
                </li>
                <li>
                  üò† <strong>–ì–Ω–µ–≤</strong> ‚Üí –ö–∞–º–Ω–∏ –∏ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã
                </li>
                <li>
                  üò∞ <strong>–¢—Ä–µ–≤–æ–≥–∞</strong> ‚Üí –ì—Ä–∏–±—ã –∏ —É–∫—Ä–∞—à–µ–Ω–∏—è
                </li>
              </ul>
            </div>
            <div className="rounded-lg bg-green-50 p-4">
              <h3 className="mb-2 font-semibold text-green-800">
                ‚ö° –ë–æ–Ω—É—Å—ã —Ä–µ–¥–∫–æ—Å—Ç–∏
              </h3>
              <ul className="space-y-1 text-sm text-green-700">
                <li>üòä –†–∞–¥–æ—Å—Ç—å: +20% –∫ —Ä–µ–¥–∫–æ—Å—Ç–∏</li>
                <li>üòå –°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ: +10% –∫ —Ä–µ–¥–∫–æ—Å—Ç–∏</li>
                <li>üò∞ –¢—Ä–µ–≤–æ–≥–∞: +10% –∫ —Ä–µ–¥–∫–æ—Å—Ç–∏</li>
                <li>üò¢ –ì—Ä—É—Å—Ç—å: +5% –∫ —Ä–µ–¥–∫–æ—Å—Ç–∏</li>
                <li>üò∞ –°—Ç—Ä–µ—Å—Å: –±–µ–∑ –±–æ–Ω—É—Å–∞</li>
                <li>üò† –ì–Ω–µ–≤: –±–µ–∑ –±–æ–Ω—É—Å–∞</li>
              </ul>
            </div>
            <div className="rounded-lg bg-yellow-50 p-4">
              <h3 className="mb-2 font-semibold text-yellow-800">
                ‚≠ê –ü—Ä–µ–º–∏—É–º —ç–ª–µ–º–µ–Ω—Ç—ã
              </h3>
              <ul className="space-y-1 text-sm text-yellow-700">
                <li>üí≥ –ü–æ–∫—É–ø–∫–∞ —á–µ—Ä–µ–∑ Telegram Stars</li>
                <li>üéÅ –ü–æ–¥–∞—Ä–∫–∏ –æ—Ç –¥—Ä—É–∑–µ–π</li>
                <li>üèÜ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</li>
                <li>üåü –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏</li>
                <li>üíé –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞</li>
              </ul>
            </div>
          </div>

          <div className="mt-6 rounded-lg bg-gray-50 p-4">
            <h3 className="mb-2 font-semibold text-gray-800">
              üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
            </h3>
            <div className="grid grid-cols-2 gap-4 md:grid-cols-5">
              {Object.entries(RARITY_INFO).map(([rarity, rarityInfo]) => {
                const count = ALL_ELEMENTS.filter(
                  el => el.rarity === rarity
                ).length
                return (
                  <div key={rarity} className="text-center">
                    <div
                      className="mx-auto mb-1 h-6 w-6 rounded-full"
                      style={{ backgroundColor: rarityInfo.color }}
                    />
                    <div className="text-lg font-bold">{count}</div>
                    <div className="text-xs text-gray-600">
                      {rarityInfo.label}
                    </div>
                  </div>
                )
              })}
            </div>
          </div>
        </Card>
      </div>
    </div>
  )
}
