import { useState } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import {
  ChevronRight,
  ChevronLeft,
  Sparkles,
  Heart,
  Sprout,
} from 'lucide-react'
import { Button, Card } from '@/components/ui'
import { useUserClientStore } from '@/hooks/index.v2'
import { MOOD_CONFIG } from '@/types'

interface OnboardingPageProps {
  onComplete: () => void
}

const ONBOARDING_STEPS = [
  {
    id: 'welcome',
    title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ KiraKira',
    description: '–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ü–∏—Ñ—Ä–æ–≤–æ–π —Å–∞–¥ —ç–º–æ—Ü–∏–π',
    icon: 'üå∏',
    content: (
      <div className="space-y-4 text-center">
        <div className="mb-4 text-4xl sm:text-6xl">üå∏</div>
        <p className="text-sm leading-relaxed text-gray-600 dark:text-gray-300 sm:text-base">
          KiraKira ‚Äî —ç—Ç–æ –º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –≥–¥–µ –≤–∞—à–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —ç–º–æ—Ü–∏–∏
          –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ –∫—Ä–∞—Å–∏–≤—ã–π —Ü–∏—Ñ—Ä–æ–≤–æ–π —Å–∞–¥.
        </p>
        <p className="text-sm leading-relaxed text-gray-600 dark:text-gray-300 sm:text-base">
          –ö–∞–∂–¥—ã–π –¥–µ–Ω—å, –æ—Ç–º–µ—á–∞—è —Å–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –≤—ã –≤—ã—Ä–∞—â–∏–≤–∞–µ—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ
          —Ä–∞—Å—Ç–µ–Ω–∏—è, —Å–æ–∑–¥–∞–≤–∞—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π.
        </p>
      </div>
    ),
  },
  {
    id: 'mood-tracking',
    title: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è',
    description: '–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏',
    icon: 'üí≠',
    content: (
      <div className="space-y-4">
        <div className="mb-4 flex justify-center">
          <Heart size={48} className="text-red-400" />
        </div>
        <p className="text-center text-sm leading-relaxed text-gray-600 dark:text-gray-300 sm:text-base">
          –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤—ã –±—É–¥–µ—Ç–µ –æ—Ç–º–µ—á–∞—Ç—å —Å–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ ‚Äî –æ—Ç —Ä–∞–¥–æ—Å—Ç–∏ –¥–æ –≥—Ä—É—Å—Ç–∏,
          –æ—Ç —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è –¥–æ —Ç—Ä–µ–≤–æ–≥–∏.
        </p>
        <div className="mt-6 grid grid-cols-3 gap-3 sm:grid-cols-6">
          {Object.values(MOOD_CONFIG).map((mood, index) => (
            <motion.div
              key={mood.label}
              className="rounded-xl bg-gray-50 p-3 text-center text-2xl dark:bg-gray-800"
              initial={{ opacity: 0, scale: 0.5 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ delay: index * 0.1 }}
              title={mood.label}
            >
              {mood.emoji}
            </motion.div>
          ))}
        </div>
        <p className="text-center text-sm text-gray-500 dark:text-gray-400">
          –í–∞—à–∏ —ç–º–æ—Ü–∏–∏ ‚Äî —ç—Ç–æ –Ω–µ —Ö–æ—Ä–æ—à–æ –∏–ª–∏ –ø–ª–æ—Ö–æ, —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —á–∞—Å—Ç—å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ
          –æ–ø—ã—Ç–∞
        </p>
      </div>
    ),
  },
  {
    id: 'garden-growth',
    title: '–†–æ—Å—Ç —Å–∞–¥–∞',
    description: '–í–∞—à–∏ —ç–º–æ—Ü–∏–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏',
    icon: 'üå±',
    content: (
      <div className="space-y-4">
        <div className="mb-4 flex justify-center">
          <Sprout size={48} className="text-green-500" />
        </div>
        <p className="text-center text-sm leading-relaxed text-gray-600 dark:text-gray-300 sm:text-base">
          –ö–∞–∂–¥–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–æ, –∫–∞–∫–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –≤ –≤–∞—à–µ–º —Å–∞–¥—É.
          –†–∞–¥–æ—Å—Ç—å –ø—Ä–∏–Ω–æ—Å–∏—Ç —è—Ä–∫–∏–µ —Ü–≤–µ—Ç—ã, —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ ‚Äî –≤–æ–¥–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã.
        </p>
        <div className="rounded-xl bg-garden-50 p-4 dark:bg-gray-800">
          <div className="grid grid-cols-2 gap-4 text-center sm:grid-cols-4">
            <div>
              <div className="mb-1 text-2xl">üåº</div>
              <div className="text-xs text-gray-600 dark:text-gray-300">
                –†–∞–¥–æ—Å—Ç—å
              </div>
            </div>
            <div>
              <div className="mb-1 text-2xl">üíß</div>
              <div className="text-xs text-gray-600 dark:text-gray-300">
                –°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ
              </div>
            </div>
            <div>
              <div className="mb-1 text-2xl">üåµ</div>
              <div className="text-xs text-gray-600 dark:text-gray-300">
                –°—Ç—Ä–µ—Å—Å
              </div>
            </div>
            <div>
              <div className="mb-1 text-2xl">üçÑ</div>
              <div className="text-xs text-gray-600 dark:text-gray-300">
                –ì—Ä—É—Å—Ç—å
              </div>
            </div>
          </div>
        </div>
        <p className="text-center text-xs text-gray-500 dark:text-gray-400 sm:text-sm">
          –°–æ –≤—Ä–µ–º–µ–Ω–µ–º –≤–∞—à —Å–∞–¥ —Å—Ç–∞–Ω–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ–º –≤–∞—à–µ–≥–æ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ
          –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è
        </p>
      </div>
    ),
  },
  // {
  //   id: 'privacy',
  //   title: '–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å',
  //   description: '–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å',
  //   icon: 'üîí',
  //   content: (
  //     <div className="space-y-4">
  //       <div className="flex justify-center mb-4">
  //         <div className="p-3 bg-blue-100 rounded-full">
  //           <div className="text-3xl">üîí</div>
  //         </div>
  //       </div>
  //       <div className="space-y-3">
  //         <div className="flex items-start space-x-3">
  //           <div className="w-6 h-6 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
  //             <div className="w-2 h-2 bg-green-500 rounded-full"></div>
  //           </div>
  //           <div>
  //             <p className="font-medium text-gray-900">–õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ</p>
  //             <p className="text-sm text-gray-600">
  //               –í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
  //             </p>
  //           </div>
  //         </div>
  //         <div className="flex items-start space-x-3">
  //           <div className="w-6 h-6 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
  //             <div className="w-2 h-2 bg-green-500 rounded-full"></div>
  //           </div>
  //           <div>
  //             <p className="font-medium text-gray-900">–ù–∏–∫–∞–∫–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏</p>
  //             <p className="text-sm text-gray-600">
  //               –ú—ã –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤–∞—à–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏ –Ω–µ —Å–æ–±–∏—Ä–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  //             </p>
  //           </div>
  //         </div>
  //         <div className="flex items-start space-x-3">
  //           <div className="w-6 h-6 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
  //             <div className="w-2 h-2 bg-green-500 rounded-full"></div>
  //           </div>
  //           <div>
  //             <p className="font-medium text-gray-900">–ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å</p>
  //             <p className="text-sm text-gray-600">
  //               –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è ‚Äî –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å
  //             </p>
  //           </div>
  //         </div>
  //       </div>
  //     </div>
  //   ),
  // },
  {
    id: 'ready',
    title: '–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?',
    description: '–í–∞—à —Å–∞–¥ –∂–¥–µ—Ç –ø–µ—Ä–≤–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ',
    icon: 'üåü',
    content: (
      <div className="space-y-4 text-center">
        <div className="mb-4 flex justify-center">
          <Sparkles size={48} className="text-yellow-500" />
        </div>
        <p className="text-sm leading-relaxed text-gray-600 dark:text-gray-300 sm:text-base">
          –û—Ç–º–µ—Ç—å—Ç–µ —Å–≤–æ–µ —Ç–µ–∫—É—â–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, —á—Ç–æ–±—ã –≤—ã—Ä–∞—Å—Ç–∏—Ç—å –ø–µ—Ä–≤–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –≤
          –≤–∞—à–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–º —Å–∞–¥—É —ç–º–æ—Ü–∏–π.
        </p>
        <div className="rounded-xl bg-gradient-to-r from-garden-50 to-blue-50 p-4 dark:from-gray-800 dark:to-gray-700">
          <p className="mb-2 text-sm font-medium text-gray-700 dark:text-gray-200">
            üí° –°–æ–≤–µ—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö
          </p>
          <p className="text-sm text-gray-600 dark:text-gray-300">
            –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –æ—Ç–º–µ—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è. –≠—Ç–æ
            –ø–æ–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≤—ã—á–∫—É –∏ –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—É—é –∫–∞—Ä—Ç–∏–Ω—É –≤–∞—à–∏—Ö
            —ç–º–æ—Ü–∏–π.
          </p>
        </div>
      </div>
    ),
  },
]

export function OnboardingPage({ onComplete }: OnboardingPageProps) {
  const [currentStep, setCurrentStep] = useState(0)
  const { completeOnboarding } = useUserClientStore()

  const handleNext = () => {
    if (currentStep < ONBOARDING_STEPS.length - 1) {
      setCurrentStep(currentStep + 1)
    } else {
      completeOnboarding()
      onComplete()
    }
  }

  const handleBack = () => {
    if (currentStep > 0) {
      setCurrentStep(currentStep - 1)
    }
  }

  const currentStepData = ONBOARDING_STEPS[currentStep] ?? ONBOARDING_STEPS[0]
  const isLastStep = currentStep === ONBOARDING_STEPS.length - 1

  return (
    <div className="flex min-h-screen items-center justify-center bg-gradient-to-br from-garden-50 to-blue-50 p-2 dark:from-gray-900 dark:to-gray-800 sm:p-4">
      <div className="mx-auto w-full max-w-2xl">
        {/* Progress indicators */}
        <div className="mb-8 flex justify-center">
          <div className="flex space-x-2">
            {ONBOARDING_STEPS.map((_, index) => (
              <motion.div
                key={index}
                className={`h-3 w-3 rounded-full transition-colors duration-300 ${
                  index <= currentStep
                    ? 'bg-garden-500'
                    : 'bg-gray-300 dark:bg-gray-600'
                }`}
                initial={{ scale: 0.8 }}
                animate={{
                  scale: index === currentStep ? 1.2 : 1,
                  backgroundColor: index <= currentStep ? '#22c55e' : '#d1d5db',
                }}
                transition={{ duration: 0.3 }}
              />
            ))}
          </div>
        </div>

        {/* Step content */}
        <Card className="min-h-[400px] sm:min-h-[500px]" padding="lg">
          <AnimatePresence mode="wait">
            <motion.div
              key={currentStep}
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -20 }}
              transition={{ duration: 0.3 }}
            >
              {/* Header */}
              <div className="mb-6 text-center sm:mb-8">
                <motion.div
                  className="mb-4 text-4xl sm:text-6xl"
                  initial={{ scale: 0 }}
                  animate={{ scale: 1 }}
                  transition={{ delay: 0.2, type: 'spring', stiffness: 200 }}
                >
                  {currentStepData?.icon}
                </motion.div>

                <h1 className="mb-2 text-xl font-bold text-gray-900 dark:text-gray-100 sm:text-2xl">
                  {currentStepData?.title}
                </h1>

                <p className="text-sm text-gray-600 dark:text-gray-300 sm:text-base">
                  {currentStepData?.description}
                </p>
              </div>

              {/* Content */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.4 }}
              >
                {currentStepData?.content}
              </motion.div>
            </motion.div>
          </AnimatePresence>

          {/* Navigation */}
          <div className="mt-6 flex flex-col items-center justify-between gap-4 border-t border-gray-200 pt-6 dark:border-gray-700 sm:mt-8 sm:flex-row">
            <Button
              variant="outline"
              onClick={handleBack}
              disabled={currentStep === 0}
              leftIcon={<ChevronLeft size={16} />}
              className="w-full sm:w-auto"
            >
              –ù–∞–∑–∞–¥
            </Button>

            <div className="text-sm text-gray-500 dark:text-gray-400">
              {currentStep + 1} –∏–∑ {ONBOARDING_STEPS.length}
            </div>

            <Button
              onClick={handleNext}
              rightIcon={
                isLastStep ? <Sparkles size={16} /> : <ChevronRight size={16} />
              }
              className="w-full sm:w-auto"
            >
              {isLastStep ? '–ù–∞—á–∞—Ç—å!' : '–î–∞–ª–µ–µ'}
            </Button>
          </div>
        </Card>
      </div>
    </div>
  )
}
