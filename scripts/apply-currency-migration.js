/**
 * üí∞ –°–ö–†–ò–ü–¢ –ü–†–ò–ú–ï–ù–ï–ù–ò–Ø –ú–ò–ì–†–ê–¶–ò–ò –í–ê–õ–Æ–¢–ù–û–ô –°–ò–°–¢–ï–ú–´
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç SQL –º–∏–≥—Ä–∞—Ü–∏—é –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Supabase
 */

import { createClient } from '@supabase/supabase-js'
import { readFileSync } from 'fs'
import { fileURLToPath } from 'url'
import { dirname, join } from 'path'
import dotenv from 'dotenv'

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config()

const __filename = fileURLToPath(import.meta.url)
const __dirname = dirname(__filename)

const SUPABASE_URL = process.env.VITE_SUPABASE_URL
const SUPABASE_SERVICE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!SUPABASE_URL || !SUPABASE_SERVICE_KEY) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!')
  console.error('–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤ .env —Ñ–∞–π–ª–µ —É–∫–∞–∑–∞–Ω—ã:')
  console.error('  - VITE_SUPABASE_URL')
  console.error('  - SUPABASE_SERVICE_ROLE_KEY')
  process.exit(1)
}

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å –ø—Ä–∞–≤–∞–º–∏ service_role
const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_KEY)

async function applyMigration() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤–∞–ª—é—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...\n')

  try {
    // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏
    const migrationPath = join(
      __dirname,
      '..',
      'docs',
      'database',
      'migrations',
      '001_currency_system.sql'
    )
    const migrationSQL = readFileSync(migrationPath, 'utf-8')

    console.log('üìÑ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑:', migrationPath)
    console.log(`üìä –†–∞–∑–º–µ—Ä –º–∏–≥—Ä–∞—Ü–∏–∏: ${migrationSQL.length} —Å–∏–º–≤–æ–ª–æ–≤\n`)

    // –†–∞–∑–±–∏–≤–∞–µ–º SQL –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    const commands = migrationSQL
      .split(';')
      .map(cmd => cmd.trim())
      .filter(cmd => cmd.length > 0 && !cmd.startsWith('--'))

    console.log(`üìù –ù–∞–π–¥–µ–Ω–æ ${commands.length} SQL –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è\n`)

    let successCount = 0
    let errorCount = 0

    // –í—ã–ø–æ–ª–Ω—è–µ–º –∫–∞–∂–¥—É—é –∫–æ–º–∞–Ω–¥—É –æ—Ç–¥–µ–ª—å–Ω–æ
    for (let i = 0; i < commands.length; i++) {
      const command = commands[i]

      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
      if (
        command.startsWith('--') ||
        command.startsWith('/*') ||
        command.startsWith('COMMENT')
      ) {
        continue
      }

      console.log(`‚è≥ [${i + 1}/${commands.length}] –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É...`)

      try {
        const { error } = await supabase.rpc('exec_sql', { sql: command + ';' })

        if (error) {
          // –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –æ—à–∏–±–∫–∏ –º–æ–∂–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, "already exists")
          if (
            error.message.includes('already exists') ||
            error.message.includes('does not exist')
          ) {
            console.log(`   ‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: ${error.message}`)
          } else {
            throw error
          }
        }

        successCount++
        console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ\n`)
      } catch (err) {
        errorCount++
        console.error(`   ‚ùå –û—à–∏–±–∫–∞: ${err.message}`)
        console.error(`   –ö–æ–º–∞–Ω–¥–∞: ${command.substring(0, 100)}...\n`)

        // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∞–ª—å—à–µ
      }
    }

    console.log('\n' + '='.repeat(60))
    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ú–ò–ì–†–ê–¶–ò–ò:')
    console.log('='.repeat(60))
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: ${successCount} –∫–æ–º–∞–Ω–¥`)
    console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`)
    console.log('='.repeat(60))

    if (errorCount === 0) {
      console.log('\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!')
      console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:')
      console.log(
        '   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—ã user_currency –∏ currency_transactions'
      )
      console.log('   2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã')
      console.log('   3. –î–æ–±–∞–≤—å—Ç–µ CurrencyDisplay –≤ —Ö–µ–¥–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è')
      console.log('   4. –°–º. –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: docs/CURRENCY_SYSTEM_SETUP.md\n')
    } else {
      console.log('\n‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.')
      console.log(
        '   –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –º–æ–≥–ª–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.\n'
      )
    }
  } catch (error) {
    console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message)
    console.error('–°—Ç–µ–∫:', error.stack)
    process.exit(1)
  }
}

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥: –ø—Ä—è–º–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Supabase SQL Editor
function showManualInstructions() {
  console.log('\n' + '='.repeat(60))
  console.log('üìù –†–£–ß–ù–û–ï –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ú–ò–ì–†–ê–¶–ò–ò')
  console.log('='.repeat(60))
  console.log('\n–ï—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:')
  console.log('\n1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard ‚Üí SQL Editor')
  console.log('2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å')
  console.log(
    '3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ docs/database/migrations/001_currency_system.sql'
  )
  console.log('4. –í—Å—Ç–∞–≤—å—Ç–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ (Run)')
  console.log('\n' + '='.repeat(60) + '\n')
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
async function checkConnection() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase...')

  try {
    const { data, error } = await supabase
      .from('users')
      .select('count')
      .limit(1)

    if (error) {
      throw error
    }

    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n')
    return true
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message)
    console.error('\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:')
    console.error('  - –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å VITE_SUPABASE_URL')
    console.error('  - –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å SUPABASE_SERVICE_ROLE_KEY')
    console.error('  - –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n')
    return false
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('\n' + '='.repeat(60))
  console.log('üí∞ –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ú–ò–ì–†–ê–¶–ò–ò –í–ê–õ–Æ–¢–ù–û–ô –°–ò–°–¢–ï–ú–´')
  console.log('='.repeat(60) + '\n')

  const isConnected = await checkConnection()

  if (!isConnected) {
    showManualInstructions()
    process.exit(1)
  }

  // –ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  console.log(
    '‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞—Å—Ç –Ω–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –ë–î.'
  )
  console.log('   –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã —Å–¥–µ–ª–∞–ª–∏ backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!\n')

  await applyMigration()
}

main()
