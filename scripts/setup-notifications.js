#!/usr/bin/env node

/**
 * üõ†Ô∏è –ù–ê–°–¢–†–û–ô–ö–ê –°–ò–°–¢–ï–ú–´ –£–í–ï–î–û–ú–õ–ï–ù–ò–ô KIRAKIRA
 *
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç cron job –≤ Vercel –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */

import fs from 'fs'
import path from 'path'
import { fileURLToPath } from 'url'

const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)
const projectRoot = path.dirname(__dirname)

console.log('üîß Setting up KiraKira notification system...')

// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è Vercel cron job
const vercelConfig = {
  crons: [
    {
      path: '/api/notifications',
      schedule: '0 7-12 * * *', // –ö–∞–∂–¥—ã–π —á–∞—Å —Å 7:00 –¥–æ 12:00 UTC (10:00-15:00 MSK)
    },
  ],
}

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
const vercelJsonPath = path.join(projectRoot, 'vercel.json')
let existingConfig = {}

// –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
if (fs.existsSync(vercelJsonPath)) {
  try {
    const content = fs.readFileSync(vercelJsonPath, 'utf8')
    existingConfig = JSON.parse(content)
  } catch (error) {
    console.warn('‚ö†Ô∏è Failed to read existing vercel.json:', error.message)
  }
}

// –û–±—ä–µ–¥–∏–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
const finalConfig = {
  ...existingConfig,
  crons: vercelConfig.crons,
}

try {
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  fs.writeFileSync(vercelJsonPath, JSON.stringify(finalConfig, null, 2) + '\n')

  console.log('‚úÖ vercel.json updated with cron configuration')
  console.log(`üìÖ Notifications will run every hour from 10:00-15:00 MSK`)
} catch (error) {
  console.error('‚ùå Failed to write vercel.json:', error.message)
  process.exit(1)
}

// –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º
const docsContent = `# üì¢ –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π KiraKira

## –¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

### 1. –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (10:00-12:00 –ú–°–ö)
- –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –æ—Ç–º–µ—Ç–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –µ—Å–ª–∏ –µ—â–µ –Ω–µ –æ—Ç–º–µ—á–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è
- –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç—Ä–∏–∫–∞
- –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

### 2. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ—Ç–µ—Ä–µ —Å—Ç—Ä–∏–∫–∞ (11:00 –ú–°–ö)  
- –û—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –µ—Å–ª–∏ —Å—Ç—Ä–∏–∫ –±—ã–ª –ø—Ä–µ—Ä–≤–∞–Ω
- –¢–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º —Å—Ç—Ä–∏–∫–æ–º 2+ –¥–Ω—è
- –ú–æ—Ç–∏–≤–∏—Ä—É—é—Ç –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Ä–∏—é

### 3. –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (10:30 –ú–°–ö)
- –ß–µ—Ä–µ–∑ 3 –¥–Ω—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ - –º—è–≥–∫–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
- –ß–µ—Ä–µ–∑ 7 –¥–Ω–µ–π –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ - –±–æ–ª–µ–µ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ–µ
- –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å —É—á–µ—Ç–æ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

### 4. –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è (–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 09:00 –ú–°–ö)
- –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å—Ç—Ä–∏–∫–æ–º 7+ –¥–Ω–µ–π
- –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è —Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏
- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è

## –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ —á–µ—Ä–µ–∑:
- \`notification_settings.enabled\` - –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
- \`notification_settings.dailyReminder\` - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
- \`notification_settings.milestones\` - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö

## –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è

- **–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫:** Vercel Cron Jobs (–∫–∞–∂–¥—ã–π —á–∞—Å 10:00-15:00 –ú–°–ö)
- **–ê–Ω—Ç–∏-—Å–ø–∞–º:** –ú–∞–∫—Å–∏–º—É–º –æ–¥–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –¥–µ–Ω—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- **–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è:** –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
- **–í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞:** Europe/Moscow (–ú–°–ö)

## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥

–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã: \`GET /api/notifications\`
–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é: \`POST /api/notifications\`

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞

1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
   - \`TELEGRAM_BOT_TOKEN\` - —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞
   - \`SUPABASE_URL\` - URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
   - \`SUPABASE_SERVICE_ROLE_KEY\` - –∫–ª—é—á –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ë–î

2. –î–µ–ø–ª–æ–π –≤ Vercel –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç cron job

3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É: \`curl -X POST https://your-domain.vercel.app/api/notifications\`
`

const docsPath = path.join(projectRoot, 'docs', 'NOTIFICATIONS_SYSTEM.md')
const docsDir = path.dirname(docsPath)

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É docs –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if (!fs.existsSync(docsDir)) {
  fs.mkdirSync(docsDir, { recursive: true })
}

try {
  fs.writeFileSync(docsPath, docsContent)
  console.log('üìù Documentation created at docs/NOTIFICATIONS_SYSTEM.md')
} catch (error) {
  console.warn('‚ö†Ô∏è Failed to create documentation:', error.message)
}

// –û–±–Ω–æ–≤–ª—è–µ–º package.json —Å–æ —Å–∫—Ä–∏–ø—Ç–æ–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const packageJsonPath = path.join(projectRoot, 'package.json')

try {
  const packageContent = fs.readFileSync(packageJsonPath, 'utf8')
  const packageJson = JSON.parse(packageContent)

  packageJson.scripts = packageJson.scripts || {}
  packageJson.scripts['test-notifications'] =
    'curl -X POST http://localhost:3000/api/notifications'
  packageJson.scripts['check-notifications'] =
    'curl http://localhost:3000/api/notifications'

  fs.writeFileSync(packageJsonPath, JSON.stringify(packageJson, null, 2) + '\n')
  console.log('üì¶ Added notification testing scripts to package.json')
} catch (error) {
  console.warn('‚ö†Ô∏è Failed to update package.json:', error.message)
}

console.log('\nüéâ Notification system setup completed!')
console.log('\nNext steps:')
console.log('1. Deploy to Vercel: `vercel --prod`')
console.log('2. Check system status: `npm run check-notifications`')
console.log('3. Test manually: `npm run test-notifications`')
console.log('4. Monitor logs in Vercel dashboard')
console.log('\nüìñ Read full documentation in docs/NOTIFICATIONS_SYSTEM.md')
