#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 *   node scripts/update-user-stats.js [telegram_id]
 *   node scripts/update-user-stats.js --all
 */

const API_BASE_URL = process.env.VERCEL_URL
  ? `https://${process.env.VERCEL_URL}`
  : 'http://localhost:3000'

async function updateUserStats(telegramId) {
  try {
    console.log(`üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId}...`)

    const response = await fetch(
      `${API_BASE_URL}/api/profile?action=update_user_stats`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          telegramId: telegramId,
        }),
      }
    )

    const result = await response.json()

    if (result.success) {
      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:')
      console.log(JSON.stringify(result.data.stats, null, 2))
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞:', result.error)
      if (result.details) {
        console.error('–î–µ—Ç–∞–ª–∏:', result.details)
      }
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message)
  }
}

async function updateAllUserStats() {
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')

    const response = await fetch(
      `${API_BASE_URL}/api/profile?action=update_all_user_stats`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      }
    )

    const result = await response.json()

    if (result.success) {
      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:')
      console.log(
        `–û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${result.data.results.updated_users}`
      )

      if (result.data.results.results) {
        result.data.results.results.forEach((userStats, index) => {
          console.log(`\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #${index + 1}:`)
          console.log(JSON.stringify(userStats, null, 2))
        })
      }
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞:', result.error)
      if (result.details) {
        console.error('–î–µ—Ç–∞–ª–∏:', result.details)
      }
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message)
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
async function main() {
  const args = process.argv.slice(2)

  if (args.length === 0) {
    console.log('üìñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:')
    console.log(
      '  node scripts/update-user-stats.js [telegram_id] - –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
    )
    console.log(
      '  node scripts/update-user-stats.js --all        - –æ–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
    )
    console.log('')
    console.log('–ü—Ä–∏–º–µ—Ä—ã:')
    console.log('  node scripts/update-user-stats.js 778658013')
    console.log('  node scripts/update-user-stats.js --all')
    return
  }

  if (args[0] === '--all') {
    await updateAllUserStats()
  } else {
    const telegramId = parseInt(args[0])
    if (isNaN(telegramId)) {
      console.error('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π telegram_id. –î–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ.')
      return
    }
    await updateUserStats(telegramId)
  }
}

main().catch(console.error)
