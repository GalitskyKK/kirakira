#!/usr/bin/env node

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞ KiraKiraGardenBot
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã, –æ–ø–∏—Å–∞–Ω–∏–µ –∏ webhook
 */

import https from 'https'
import { fileURLToPath } from 'url'

const BOT_TOKEN =
  process.env.TELEGRAM_BOT_TOKEN || process.env.VITE_TELEGRAM_BOT_TOKEN

if (!BOT_TOKEN) {
  console.error('‚ùå Telegram bot token is required!')
  console.error(
    'Set TELEGRAM_BOT_TOKEN or VITE_TELEGRAM_BOT_TOKEN environment variable'
  )
  process.exit(1)
}
const BOT_API_URL = `https://api.telegram.org/bot${BOT_TOKEN}`

// –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
const COMMANDS = [
  { command: 'start', description: 'üå∏ –ù–∞—á–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ —Å KiraKira' },
  { command: 'garden', description: 'üå± –û—Ç–∫—Ä—ã—Ç—å –º–æ–π —Å–∞–¥' },
  { command: 'mood', description: 'üòä –û—Ç–º–µ—Ç–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ' },
  { command: 'stats', description: 'üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É' },
  { command: 'premium', description: '‚≠ê –ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏' },
  { command: 'share', description: 'üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–∞–¥–æ–º' },
  { command: 'help', description: '‚ùì –°–ø—Ä–∞–≤–∫–∞' },
]

// –û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
const DESCRIPTION = `üå∏ KiraKira - —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–¥

–û—Ç–º–µ—á–∞–π —Å–≤–æ–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ –Ω–∞–±–ª—é–¥–∞–π, –∫–∞–∫ –æ–Ω–∏ –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π —Ü–∏—Ñ—Ä–æ–≤–æ–π —Å–∞–¥. –ö–∞–∂–¥–∞—è —ç–º–æ—Ü–∏—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–º —Ä–∞—Å—Ç–µ–Ω–∏–µ–º, –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–º –∏–ª–∏ –∫–∞–º–Ω–µ–º.

‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ç—Ä–µ–∫–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
‚Ä¢ –ö—Ä–∞—Å–∏–≤—ã–µ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–∞–¥–∞
‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–µ–∂–¥—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏
‚Ä¢ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–∞–¥–æ–º —Å –¥—Ä—É–∑—å—è–º–∏
‚Ä¢ –ü—Ä–µ–º–∏—É–º —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞ Telegram Stars

–ù–∞—á–Ω–∏ —Å–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! üå±`

// –ö–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
const SHORT_DESCRIPTION = `üå∏ –ü—Ä–µ–≤—Ä–∞—â–∞–π —Å–≤–æ–∏ —ç–º–æ—Ü–∏–∏ –≤ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π —Ü–∏—Ñ—Ä–æ–≤–æ–π —Å–∞–¥. –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ç—Ä–µ–∫–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π —Å –∫—Ä–∞—Å–∏–≤–æ–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π.`

/**
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç HTTP –∑–∞–ø—Ä–æ—Å –∫ Telegram Bot API
 */
function makeRequest(method, data = {}) {
  return new Promise((resolve, reject) => {
    const postData = JSON.stringify(data)

    const options = {
      hostname: 'api.telegram.org',
      port: 443,
      path: `/bot${BOT_TOKEN}/${method}`,
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Content-Length': Buffer.byteLength(postData),
      },
    }

    const req = https.request(options, res => {
      let data = ''

      res.on('data', chunk => {
        data += chunk
      })

      res.on('end', () => {
        try {
          const result = JSON.parse(data)
          if (result.ok) {
            resolve(result.result)
          } else {
            reject(new Error(result.description || 'API Error'))
          }
        } catch (error) {
          reject(error)
        }
      })
    })

    req.on('error', error => {
      reject(error)
    })

    req.write(postData)
    req.end()
  })
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
 */
async function setCommands() {
  console.log('üìã –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞...')

  try {
    await makeRequest('setMyCommands', { commands: COMMANDS })
    console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')

    // –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
    console.log('\nüìù –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:')
    COMMANDS.forEach(cmd => {
      console.log(`  /${cmd.command} - ${cmd.description}`)
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥:', error.message)
  }
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
 */
async function setDescription() {
  console.log('\nüìù –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞...')

  try {
    await makeRequest('setMyDescription', { description: DESCRIPTION })
    console.log('‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–ø–∏—Å–∞–Ω–∏—è:', error.message)
  }
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
 */
async function setShortDescription() {
  console.log('\nüìÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ...')

  try {
    await makeRequest('setMyShortDescription', {
      short_description: SHORT_DESCRIPTION,
    })
    console.log('‚úÖ –ö–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è:', error.message)
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
 */
async function getBotInfo() {
  console.log('\nü§ñ –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ...')

  try {
    const info = await makeRequest('getMe')
    console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:')
    console.log(`  ID: ${info.id}`)
    console.log(`  –ò–º—è: ${info.first_name}`)
    console.log(`  Username: @${info.username}`)
    console.log(`  –°—Å—ã–ª–∫–∞: https://t.me/${info.username}`)
    console.log(
      `  –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Mini Apps: ${info.supports_inline_queries ? '‚úÖ' : '‚ùå'}`
    )
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:', error.message)
  }
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç webhook (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω URL)
 */
async function setWebhook(url) {
  if (!url) {
    console.log('\nüîó Webhook URL –Ω–µ —É–∫–∞–∑–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...')
    return
  }

  console.log(`\nüîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook: ${url}`)

  try {
    await makeRequest('setWebhook', {
      url: `${url}/api/telegram/webhook`,
      allowed_updates: [
        'message',
        'callback_query',
        'inline_query',
        'pre_checkout_query',
        'successful_payment',
      ],
    })
    console.log('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:', error.message)
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function main() {
  console.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ KiraKiraGardenBot\n')

  // –ü–æ–ª—É—á–∞–µ–º URL –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
  const webhookUrl = process.argv[2]

  try {
    await getBotInfo()
    await setCommands()
    await setDescription()
    await setShortDescription()
    await setWebhook(webhookUrl)

    console.log('\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:')
    console.log('1. –î–æ–±–∞–≤—å—Ç–µ –∞–≤–∞—Ç–∞—Ä –±–æ—Ç—É —á–µ—Ä–µ–∑ @BotFather (/setuserpic)')
    console.log('2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Mini App URL –≤ @BotFather')
    console.log('3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞: https://t.me/KiraKiraGardenBot')

    if (webhookUrl) {
      console.log(`4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ webhook: ${webhookUrl}/api/telegram/webhook`)
    }
  } catch (error) {
    console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
const __filename = fileURLToPath(import.meta.url)
if (process.argv[1] === __filename) {
  main().catch(console.error)
}

export { setCommands, setDescription, setWebhook, getBotInfo }
